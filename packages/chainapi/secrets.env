# Mnemonics

# Your Airnode mnemonic refers to a series of 12 (or 24) dictionary words that serve as
# the “private key” of your deployed Airnode. From the mnemonic phrase, Airnode is able
# to assign wallet addresses to both the Airnode instance and your users. The mnemonic
# entered here should match the mnemonic used when connecting to ChainAPI.
#
# IMPORTANT: Your mnemonic must be kept a secret as anyone can use it to access your funds
# and your users funds. Do not share your mnemonic with anyone!
#
# Ensure that your mnemonic is surrounded by double quotes to prevent whitespace errors.
#
# Example value: “earth talk lava …”

AIRNODE_WALLET_MNEMONIC=


# ApiKeys

# API keys provide a way to authenticate users trying to access your API. Your Airnode will use
# the keys specified here to connect to your API(s) and endpoints. These keys depend on how your
# API has been configured and will be different for each Airnode user.
#
# Example value: 5ce7ec68-4fa9-4307-a44e-6a49447caca8

DISCORD_MEMBER_PRESENCE_SECURITY_SCHEME_1_API_KEY_VALUE=


# Heartbeat

# ChainAPI links a user-created deployment to a deployed Airnode using Airnode’s “heartbeat”.
# A deployed Airnode will attempt to send a scheduled heartbeat request to ChainAPI evey minute.
# The heartbeat includes important information and metrics about the Airnode and lets ChainAPI know
# the status of the deployment. e.g. if it is active or not.
#
# The heartbeat is enabled by default and will post automatically, although it can be disabled
# by editing the relevant section in the config.json file. This is not recommended as your
# deployments on ChainAPI will be marked as “inactive” and limit future opportunities.
#
# ChainAPI has pre-filled the values using your account and deployment details. You do not need
# to edit any values here.

HEARTBEAT_URL=https://api.chainapi.com/api/v1/airnode_heartbeats?deployment_id=5a86c7ff-58a5-4985-863e-63bd73fff10d
HEARTBEAT_API_KEY=97cd1325-9a77-4cb7-8620-81a593661cbb


# General

# If you would like to share your config.json file with parts of it hidden, replace hardcoded
# values with the “${MY_SECRET_VALUE}” syntax. When your Airnode is deployed, it will search
# for any values that are wrapped in “${…}” and try to find a secret value from this file.
# Airnode will return an error if the value is not found.
#
# Example: MY_SECRET_VALUE=1234

GCP_PROJECT_ID=